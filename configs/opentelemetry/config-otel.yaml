receivers:
  fluentforward:
    endpoint: 0.0.0.0:24224
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
  otlp/spanmetrics:
        protocols:
          grpc:
            endpoint: 0.0.0.0:12346
processors:
  batch:
    send_batch_size: 100000
    timeout: 5s
  memory_limiter:
    check_interval: 2s
    limit_mib: 1800
    spike_limit_mib: 500
  resourcedetection/system:
    detectors: [ "system" ]
    system:
      hostname_sources: [ "os" ]
  # resource:
    # attributes:
      # - key: service.name
        # value: "serviceName"
        # action: upsert
  spanmetrics:
    metrics_exporter: prometheus
  transform:
    metric_statements:
      - context: metric
        statements:
          - set(description, "Measures the duration of inbound HTTP requests") where name == "http.server.duration"

connectors:
  spanmetrics:
    # namespace: mas-assist
    histogram:
      unit: s
      explicit:
        buckets: [10ms, 100ms, 200ms, 400ms, 800ms, 1s, 1200ms, 1400ms, 1600ms, 1800ms, 2s, 5s, 7s]
    dimensions:
      - name: http.method
      - name: http.status_code
      - name: http.target
      - name: http.url
      - name: http.route

exporters:
  clickhouse:
    endpoint: tcp://clickhouse:9000?dial_timeout=10s&compress=lz4
    database: default
    logs_table_name: logs
    traces_table_name: traces
    metrics_table_name: metrics
    ttl_days: 3
    timeout: 10s
    # sending_queue:
      # queue_size: 100
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
  
  # logging:
    # loglevel: INFO #${EXPORTERS_LOGGING_LOGLEVEL}

      
  prometheus:
    # namespace: test-space
    endpoint: "0.0.0.0:8889"
    metric_expiration: 180m
    send_timestamps: true
    # resource_to_telemetry_conversion:
      # enabled: true
    enable_open_metrics: true
    
extensions:
  health_check:
  pprof:
  zpages:
  memory_ballast:
    size_mib: 1000

service:
  extensions: [ pprof, zpages, health_check ]
  pipelines:
    logs:
      receivers: [ fluentforward, otlp ]
      processors: [ memory_limiter, resourcedetection/system, batch ]
      exporters: [ clickhouse ]
    traces:
      receivers: [ otlp ]
      processors: [ memory_limiter, resourcedetection/system, batch ]
      exporters: [ spanmetrics, clickhouse ]
    metrics:
      receivers: [ otlp, otlp/spanmetrics, spanmetrics ]
      processors: [ memory_limiter, resourcedetection/system, batch ]
      exporters: [ clickhouse ]
